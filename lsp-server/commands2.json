{
	"syntax" :[
		{"command":"gsbounds", 
			"syntaxType":"function",
			"shortDescription":"Boundaries for group sequential trials.", 
			"verboseDescription": "Computes stopping boundaries for group sequential designs (GSDs), a class of experimental design popular in clinical trials. GSDs incorporate planned interim analyses, or looks at the data, and rovide criteria for stopping the trial early based on values of a test statistic. Stopping can be for efficacy, futility, or both.",
			"syntaxSimple":"gsbounds [, options]",
			"syntaxVerbose": "gsbounds [, efficacy(boundary) options]\n\nboundary:\n  obflemming -- classical O'Brien-Fleming bound\n  pocock -- classical Pocock bound\n  wtsiatis(#) -- classical Wang-Tsiatis bound with specified parameter value\n  errpocock -- error-spending Pocock-style bound\n  errobleming -- error-spending O'Brien-Fleming-style bound\n  kdemets(#) -- error-spending Kim-Demets bound with specified parameter value\nhsdecani(#) -- error-spending Hwang-Shih-de Cani bound with specified parameter value\n\n option:\n  efficacy(boundary) -- boundary for efficacy stopping; default is efficacy(obflemming)\n  futility(boundary [, boundary]) -- boundary for futility stopping; default is nonbinding\n  nlooks(#) -- total numer of analyses\n  information(numlist) -- sequence of information levels for analyses\n  nopvalues -- suppress p-values\n  alpha(#) -- overall significance level; default is 0.05\n  power(#) -- overall power for all tests; default is power(0.8)\n  beta(#) -- overall probability of type II erro for all tests; default is 0.2\n  upper -- upper one-sided test\n  lower -- lower one-sided test\n  onesided -- synonym for upper", 
			"example": "gsbounds, efficacy(pocock) nlooks(5)", 
			"extendedCommand": ["gsbounds, efficacy", "gsbounds, futility","gsbounds, nlooks","gsbounds, nopvalues","gsbounds, alpha","gsbounds, power","gsbounds, beta","gsbounds, upper","gsbounds, lower","gsbounds, onesided"]}
	]
}
